--------------------------------------------------------------------------------
-- Company: 
-- Engineer:
--
-- Create Date:   15:29:16 04/21/2018
-- Design Name:   
-- Module Name:   E:/Y4/decoder/decoder_tb.vhd
-- Project Name:  decoder
-- Target Device:  
-- Tool versions:  
-- Description:   
-- 
-- VHDL Test Bench Created by ISE for module: decoder
-- 
-- Dependencies:
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Notes: 
-- This testbench has been automatically generated using types std_logic and
-- std_logic_vector for the ports of the unit under test.  Xilinx recommends
-- that these types always be used for the top-level I/O of a design in order
-- to guarantee that the testbench will bind correctly to the post-implementation 
-- simulation model.
--------------------------------------------------------------------------------
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
USE ieee.numeric_std.ALL;
 
ENTITY decoder_tb IS
END decoder_tb;
 
ARCHITECTURE behavior OF decoder_tb IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT decoder
    PORT(
         u1 : IN  std_logic;
         u2 : IN  std_logic;
         Clock : IN  std_logic;
         Output : OUT  std_logic
        );
    END COMPONENT;
    

   --Inputs
   signal u1 : std_logic := '0';
   signal u2 : std_logic := '0';
   signal Clock : std_logic := '0';

 	--Outputs
   signal Output : std_logic;

   -- Clock period definitions
   constant Clock_period : time := 10 ns;
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: decoder PORT MAP (
          u1 => u1,
          u2 => u2,
          Clock => Clock,
          Output => Output
        );

   -- Clock process definitions
   Clock_process :process
   begin
		Clock <= '0';
		wait for Clock_period/2;
		Clock <= '1';
		wait for Clock_period/2;
   end process;
 

   -- Stimulus process
   stim_proc: process
   begin		

		u1<='1';
		u2<='1';
		wait for Clock_period;
		u1<='0';
		u2<='1';
		wait for Clock_period;
		u1<='1';
		u2<='0';
		wait for Clock_period;		
		u1<='0';
		u2<='1';
		wait for Clock_period;
		u1<='1';
		u2<='1';
		wait for Clock_period;
		u1<='0';
		u2<='0';
		wait for Clock_period;
		
		u1<='1';
		u2<='1';
		wait for Clock_period;
		u1<='1';--err
		u2<='1';
		wait for Clock_period;
		u1<='1';
		u2<='1';--err
		wait for Clock_period;		
		u1<='1';--err
		u2<='1';
		wait for Clock_period;
		u1<='1';
		u2<='1';
		wait for Clock_period;
		u1<='1';--err
		u2<='1';--err
		wait for Clock_period;
		
		u1<='1';
		u2<='1';
		wait for Clock_period;
		u1<='1';--err
		u2<='1';
		wait for Clock_period;
		u1<='1';
		u2<='1';--err
		wait for Clock_period;		
		u1<='1';--err
		u2<='1';
		wait for Clock_period;
		u1<='1';
		u2<='1';
		wait for Clock_period;
		u1<='1';--err
		u2<='1';--err
		wait for Clock_period;
		
		u1<='1';
		u2<='1';
		wait for Clock_period;
		u1<='0';
		u2<='1';
		wait for Clock_period;
		u1<='1';
		u2<='0';
		wait for Clock_period;		
		u1<='0';
		u2<='1';
		wait for Clock_period;
		u1<='1';
		u2<='1';
		wait for Clock_period;
		u1<='0';
		u2<='0';
		wait for Clock_period;
		
		u1<='1';
		u2<='1';
		wait for Clock_period;
		u1<='0';
		u2<='1';
		wait for Clock_period;
		u1<='1';
		u2<='0';
		wait for Clock_period;		
		u1<='0';
		u2<='1';
		wait for Clock_period;
		u1<='1';
		u2<='1';
		wait for Clock_period;
		u1<='0';
		u2<='0';
		wait for Clock_period;
		
		u1<='1';
		u2<='1';
		wait for Clock_period;
		u1<='0';
		u2<='1';
		wait for Clock_period;
		u1<='1';
		u2<='0';
		wait for Clock_period;		
		u1<='0';
		u2<='1';
		wait for Clock_period;
		u1<='1';
		u2<='1';
		wait for Clock_period;
		u1<='0';
		u2<='0';
		wait for Clock_period;
		
		u1<='1';
		u2<='1';
		wait for Clock_period;
		u1<='0';
		u2<='1';
		wait for Clock_period;
		u1<='1';
		u2<='0';
		wait for Clock_period;		
		u1<='0';
		u2<='1';
		wait for Clock_period;
		u1<='1';
		u2<='1';
		wait for Clock_period;
		u1<='0';
		u2<='0';
		wait for Clock_period;
		
		u1<='1';
		u2<='1';
		wait for Clock_period;
		u1<='0';
		u2<='1';
		wait for Clock_period;
		u1<='1';
		u2<='0';
		wait for Clock_period;		
		u1<='0';
		u2<='1';
		wait for Clock_period;
		u1<='1';
		u2<='1';
		wait for Clock_period;
		u1<='0';
		u2<='0';
		wait for Clock_period;
		
		
		u1<='0';
		u2<='0';
      wait;
   end process;

END;
